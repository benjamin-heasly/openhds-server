<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
        
    <bean id="databaseConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
        	<list>
            	<value>classpath:location-levels.properties</value>
            	<value>classpath:codes.properties</value>
            </list>
        </property>
    </bean>	
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="DriverClassName" value="org.h2.Driver" />
        <property name="Url" value="jdbc:h2:mem:openhds" />
        <property name="Username" value="sa" />
        <property name="Password" value="" />
    </bean>
    
     <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>				      
				<value>org.openhds.domain.model.AuditableCollectedEntity</value>
				<value>org.openhds.domain.model.AuditableEntity</value>
				<value>org.openhds.domain.model.ClassExtension</value>
				<value>org.openhds.domain.model.Death</value>
				<value>org.openhds.domain.model.DemRates</value>
				<value>org.openhds.domain.model.Extension</value>
				<value>org.openhds.domain.model.FieldWorker</value>
				<value>org.openhds.domain.model.Individual</value>
				<value>org.openhds.domain.model.InMigration</value>
				<value>org.openhds.domain.model.Location</value>
				<value>org.openhds.domain.model.LocationHierarchy</value>
				<value>org.openhds.domain.model.LocationHierarchyLevel</value>
				<value>org.openhds.domain.model.Membership</value>
				<value>org.openhds.domain.model.MigrationType</value>
				<value>org.openhds.domain.model.Note</value>
				<value>org.openhds.domain.model.Outcome</value>
				<value>org.openhds.domain.model.OutMigration</value>
				<value>org.openhds.domain.model.PregnancyObservation</value>
				<value>org.openhds.domain.model.PregnancyOutcome</value>
				<value>org.openhds.domain.model.Privilege</value>
				<value>org.openhds.domain.model.Relationship</value>
				<value>org.openhds.domain.model.Residency</value>
				<value>org.openhds.domain.model.Role</value>
				<value>org.openhds.domain.model.Round</value>
				<value>org.openhds.domain.model.SocialGroup</value>
				<value>org.openhds.domain.model.User</value>
				<value>org.openhds.domain.model.Visit</value>
				<value>org.openhds.domain.model.Whitelist</value>
			</list>
		</property>
		<property name="hibernateProperties">
	    	<value>
            	hibernate.dialect=org.hibernate.dialect.HSQLDialect
                hibernate.hbm2ddl.auto=create
                hibernate.show_sql=true
        	</value>
        </property>
	 </bean>
                                                   
    <bean id="authSuccessHandler" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.web.security.AuthenticationSuccessHandler">
				<constructor-arg ref="userDao" />
			</bean>
   		</property>
	 </bean>

    <bean id="logoutSuccessHandler" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.web.security.LogoutSuccessHandler">
				<constructor-arg ref="userDao" />
			</bean>
   		</property>
	</bean>
		
	<bean id="prefLocale" class="org.openhds.web.util.Locale" >
        <property name="locale" value="English" />
    </bean>
				
	<!-- Configure Spring Security -->
    <security:http auto-config="true">
        <security:form-login authentication-success-handler-ref="authSuccessHandler" login-page="/login.faces" login-processing-url="/loginProcess" authentication-failure-url="/login.faces?login_error=1" />
        <security:intercept-url pattern="/login.faces" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/resources/css/main.css" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/css/login.css" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/logout.faces" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/api/rest/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/openFacesResources/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/primefaces_resource/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/module/dsl/binding-def/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/module/dsl/validation" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/**" access="ROLE_AUTHENTICATED" />
        <security:intercept-url pattern="/webservice/ddiGenerator" access="ROLE_AUTHENTICATED"/>
        <security:logout logout-url="/logoutProcess" success-handler-ref="logoutSuccessHandler"/>
    </security:http>
    
    <bean id="calendarConverter" class="org.openhds.web.cvt.CalendarConverter">
        <property name="dateFormat" value="#{siteProperties.dateFormat}" />
    </bean>
    
 
    <!-- Autocomplete converters -->
    <bean id="fieldWorkerExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="fieldWorkerDao" />
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="individualExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="extId" />
    </bean>
        
    <bean id="locationExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="locationDao" />
        <constructor-arg value="org.openhds.domain.model.Location" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="locationHierarchyExtIdConverter" class="org.openhds.web.cvt.LocationHierarchyConverter">
        <property name="genericDao" ref="genericDao" />
    </bean>
    
    <bean id="optionalIndividualExtIdConverter" class="org.openhds.web.cvt.OptionalEntityPropertyConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="socialGroupExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="socialGroupDao" />
        <constructor-arg value="org.openhds.domain.model.SocialGroup" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="visitExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="visitDao" />
        <constructor-arg value="org.openhds.domain.model.Visit" />
        <constructor-arg value="extId" />
    </bean>
    
	<bean id="maritalStatusEndTypeCodesConverter" class="org.openhds.web.cvt.MaritalStatusEndTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<bean id="membershipStartTypeCodesConverter" class="org.openhds.web.cvt.MembershipStartTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<bean id="membershipEndTypeCodesConverter" class="org.openhds.web.cvt.MembershipEndTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<bean id="residencyStartTypeCodesConverter" class="org.openhds.web.cvt.ResidencyStartTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<bean id="residencyEndTypeCodesConverter" class="org.openhds.web.cvt.ResidencyEndTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<bean id="pregnancyTypeCodeConverter" class="org.openhds.web.cvt.PregnancyTypeCodeConverter" >
		<constructor-arg ref="siteProperties" />
	</bean>
	
	<!-- Entity Converters -->
	<bean id="deathConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="deathDao" />
        <constructor-arg value="org.openhds.domain.model.Death" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="demRatesConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="demRatesDao" />
        <constructor-arg value="org.openhds.domain.model.DemRates" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="extensionConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="extensionDao" />
        <constructor-arg value="org.openhds.domain.model.ClassExtension" />
        <constructor-arg value="java.lang.String" />
    </bean>
	
	<bean id="fieldWorkerConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="fieldWorkerDao" />
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="individualConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="inMigrationConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="inMigrationDao" />
        <constructor-arg value="org.openhds.domain.model.InMigration" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="locationConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="locationDao" />
        <constructor-arg value="org.openhds.domain.model.Location" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="locationHierarchyConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="locationHierarchyDao" />
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="membershipConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="membershipDao" />
        <constructor-arg value="org.openhds.domain.model.Membership" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="noteConverter" class="org.openhds.web.cvt.EntityConverterImpl">
    	<constructor-arg ref="noteDao" />
    	<constructor-arg value="org.openhds.domain.model.Note" />
    	<constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="outMigrationConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="outMigrationDao" />
        <constructor-arg value="org.openhds.domain.model.OutMigration" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="pregnancyConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="pregnancyDao" />
        <constructor-arg value="org.openhds.domain.model.PregnancyOutcome" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="pregnancyObservationConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="pregnancyObservationDao" />
        <constructor-arg value="org.openhds.domain.model.PregnancyObservation" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="relationshipConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="relationshipDao" />
        <constructor-arg value="org.openhds.domain.model.Relationship" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="residencyConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="residencyDao" />
        <constructor-arg value="org.openhds.domain.model.Residency" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="roleConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="roleDao" />
        <constructor-arg value="org.openhds.domain.model.Role" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="roundConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="roundDao" />
        <constructor-arg value="org.openhds.domain.model.Round" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="socialGroupConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="socialGroupDao" />
        <constructor-arg value="org.openhds.domain.model.SocialGroup" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="userConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="userDao" />
        <constructor-arg value="org.openhds.domain.model.User" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="visitConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="visitDao" />
        <constructor-arg value="org.openhds.domain.model.Visit" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="whitelistConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="whitelistDao" />
        <constructor-arg value="org.openhds.domain.model.Whitelist" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="facesNavigation" class="org.openhds.web.ui.FacesNavigation" />
    <bean id="navController" class="org.openhds.web.ui.NavigationMenuBean" />
    
    <bean id="jsfService" class="org.openhds.integration.util.JsfServiceMock" />
    
    <bean id="webFlowService" class="org.openhds.web.service.impl.WebFlowServiceImpl" />
    
    <bean id="entityService" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.controller.service.impl.EntityServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="currentUser" />
		        <constructor-arg ref="calendarUtil" />
		        <constructor-arg ref="siteProperties" />
		        <constructor-arg ref="entityValidator" />
	        </bean>
        </property>
    </bean> 
    
    <bean id="entityValidator" class="org.openhds.web.service.impl.EntityValidationServiceImpl">
    	<constructor-arg ref="siteProperties" />
    	<constructor-arg ref="jsfService" />
    </bean>
        
    <bean id="userService" parent="baseServiceBean">
    	<property name="target">    
		    <bean class="org.openhds.web.service.impl.UserServiceImpl">
		    	<constructor-arg name="genericDao" ref="genericDao" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="baseCrud" class="org.openhds.web.crud.impl.EntityCrudImpl" abstract="true">
        <property name="jsfService" ref="jsfService" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="entityService" ref="entityService" />
        <property name="genericDao" ref="genericDao" />
        <property name="navMenuBean" ref="navController" />
        <property name="properties" ref="siteProperties" />
        <property name="entityValidationService" ref="entityValidator" />
    </bean>
        
    <bean id="deathCrud" parent="baseCrud" class="org.openhds.web.crud.impl.DeathCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Death" />
        <property name="dao" ref="deathDao" />
        <property name="converter" ref="deathConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="deathService" />
    </bean>
    
    <bean id="demRatesCrud" parent="baseCrud" class="org.openhds.web.crud.impl.DemRatesCrudImpl">
        <constructor-arg value="org.openhds.domain.model.DemRates" />
        <property name="dao" ref="demRatesDao" />
        <property name="converter" ref="demRatesConverter" />
        <property name="demRatesService" ref="demRatesService" />
    </bean>
    
    <bean id="extensionCrud" parent="baseCrud" class="org.openhds.web.crud.impl.ExtensionCrudImpl">
        <constructor-arg value="org.openhds.domain.model.ClassExtension" />
        <property name="dao" ref="extensionDao" />
        <property name="converter" ref="extensionConverter" />
        <property name="service" ref="extensionService" />
        <property name="entityValidator" ref="entityValidator" />
    </bean>
    
    <bean id="fieldWorkerCrud" parent="baseCrud" class="org.openhds.web.crud.impl.FieldWorkerCrudImpl">
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <property name="dao" ref="fieldWorkerDao" />
        <property name="converter" ref="fieldWorkerConverter" />
        <property name="service" ref="fieldWorkerService" />
    </bean>
    
    <bean id="individualCrud" parent="baseCrud" class="org.openhds.web.crud.impl.IndividualCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <property name="dao" ref="individualDao" />
        <property name="converter" ref="individualConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="individualService" />
    </bean>
    
    <bean id="individualMergeCrud" parent="baseCrud" class="org.openhds.web.crud.impl.IndividualMergeCrudImpl">
        <constructor-arg value="org.openhds.domain.model.IndividualMerge" />
        <property name="indivMergeService" ref="individualMergeService" />
    </bean>
    
    <bean id="inMigrationCrud" parent="baseCrud" class="org.openhds.web.crud.impl.InMigrationCrudImpl">
        <constructor-arg value="org.openhds.domain.model.InMigration" />
        <property name="dao" ref="inMigrationDao" />
        <property name="converter" ref="inMigrationConverter" />
        <property name="service" ref="inMigrationService" />
    </bean>
    
    <bean id="locationCrud" parent="baseCrud" class="org.openhds.web.crud.impl.LocationCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Location" />
        <property name="dao" ref="locationDao" />
        <property name="converter" ref="locationConverter" />
        <property name="siteProperties" ref="siteProperties" />
        <property name="service" ref="locationHierarchyService" />
    </bean>
    
    <bean id="locationHierarchyCrud" parent="baseCrud" class="org.openhds.web.crud.impl.LocationHierarchyCrudImpl">
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
        <property name="dao" ref="locationHierarchyDao" />
        <property name="converter" ref="locationHierarchyConverter" />
        <property name="service" ref="locationHierarchyService" />
    </bean>
    
    <bean id="membershipCrud" parent="baseCrud" class="org.openhds.web.crud.impl.MembershipCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Membership" />
        <property name="dao" ref="membershipDao" />
        <property name="converter" ref="membershipConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="membershipService" />
    </bean>
    
    <bean id="noteCrud" parent="baseCrud" class="org.openhds.web.crud.impl.EntityCrudImpl">
    	<constructor-arg value="org.openhds.domain.model.Note" />
    	<property name="dao" ref="noteDao" />
    	<property name="converter" ref="noteConverter" />
    </bean>
    
    <bean id="outMigrationCrud" parent="baseCrud" class="org.openhds.web.crud.impl.OutMigrationCrudImpl">
        <constructor-arg value="org.openhds.domain.model.OutMigration" />
        <property name="dao" ref="outMigrationDao" />
        <property name="converter" ref="outMigrationConverter" />
        <property name="entityService" ref="entityService" />
        <property name="service" ref="outMigrationService" />
    </bean>
    
    <bean id="pregnancyOutcomeCrud" parent="baseCrud" class="org.openhds.web.crud.impl.PregnancyOutcomeCrudImpl" >
        <constructor-arg value="org.openhds.domain.model.PregnancyOutcome" />
        <property name="dao" ref="pregnancyDao" />
        <property name="converter" ref="pregnancyConverter" />
        <property name="entityService" ref="entityService" />
        <property name="service" ref="pregnancyService" />
        <property name="sgService" ref="socialGroupService" />
    </bean>
    
    <bean id="pregnancyObservationCrud" parent="baseCrud" class="org.openhds.web.crud.impl.PregnancyObservationCrudImpl">
        <constructor-arg value="org.openhds.domain.model.PregnancyObservation" />
        <property name="dao" ref="pregnancyObservationDao" />
        <property name="converter" ref="pregnancyObservationConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="pregnancyService" />
    </bean>
    
    <bean id="relationshipCrud" parent="baseCrud" class="org.openhds.web.crud.impl.RelationshipCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Relationship" />
        <property name="dao" ref="relationshipDao" />
        <property name="converter" ref="relationshipConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="relationshipService"></property>
    </bean>
    
    <bean id="residencyCrud" parent="baseCrud" class="org.openhds.web.crud.impl.ResidencyCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Residency" />
        <property name="dao" ref="residencyDao" />
        <property name="converter" ref="residencyConverter" />
        <property name="residencyService" ref="residencyService" />
    </bean>
    
    <bean id="roleCrud" parent="baseCrud" class="org.openhds.web.crud.impl.RoleCrudImpl">
    	<constructor-arg value="org.openhds.domain.model.Role" />
    	<property name="dao" ref="roleDao" />
    	<property name="converter" ref="roleConverter" />
    	<property name="service" ref="roleService" />
    </bean>
    
    <bean id="roundCrud" parent="baseCrud" class="org.openhds.web.crud.impl.RoundCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Round" />
        <property name="dao" ref="roundDao" />
        <property name="converter" ref="roundConverter" />
        <property name="service" ref="roundService" />
    </bean>
    
    <bean id="socialGroupCrud" parent="baseCrud" class="org.openhds.web.crud.impl.SocialGroupCrudImpl">
        <constructor-arg value="org.openhds.domain.model.SocialGroup" />
        <property name="dao" ref="socialGroupDao" />
        <property name="converter" ref="socialGroupConverter" />
        <property name="socialGroupService" ref="socialGroupService" />
        <property name="individualService" ref="individualService" />
    </bean>
    
    <bean id="userCrud" parent="baseCrud" class="org.openhds.web.crud.impl.UserCrudImpl">
        <constructor-arg value="org.openhds.domain.model.User" />
        <property name="dao" ref="userDao" />
        <property name="converter" ref="userConverter" />
        <property name="service" ref="userService" />
    </bean>
    
    <bean id="visitCrud" parent="baseCrud" class="org.openhds.web.crud.impl.VisitCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Visit" />
        <property name="dao" ref="visitDao" />
        <property name="converter" ref="visitConverter" />
        <property name="service" ref="visitService"></property>
        <property name="extensionService" ref="extensionService"></property>
        <property name="siteProperties" ref="siteProperties"></property>
    </bean>
    
    <bean id="whitelistCrud" parent="baseCrud" class="org.openhds.web.crud.impl.EntityCrudImpl">
    	<constructor-arg value="org.openhds.domain.model.Whitelist" />
        <property name="dao" ref="whitelistDao" />
        <property name="converter" ref="whitelistConverter" />
    </bean>
    
    <!-- Beans -->   
    <bean id="updateBean" class="org.openhds.web.beans.UpdateBean" scope="session">
        <property name="residencyService" ref="residencyService" />
        <property name="properties" ref="siteProperties" />
        <property name="genericDao" ref="genericDao" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="jsfService" ref="jsfService" />
    </bean>
    
    <bean id="baselineFlowBean" class="org.openhds.web.beans.BaselineFlowBean" scope="session">
        <property name="residencyService" ref="residencyService" />
        <property name="baselineService" ref="baselineService" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="individualService" ref="individualService" />
        <property name="genericDao" ref="genericDao" />
        <property name="socialGroupGenerator" ref="socialGroupIdGenerator" />
        <property name="properties" ref="siteProperties" />
    </bean>
    
    <bean id="individualHistoryBean" class="org.openhds.web.beans.IndividualHistoryBean" scope="session">
    	<property name="genericDao" ref="genericDao" />
    	<property name="membershipService" ref="membershipService" />
    	<property name="individualService" ref="individualService" />
    	<property name="relationshipService" ref="relationshipService" />
   		<property name="socialGroupService" ref="socialGroupService" />
   		<property name="residencyService" ref="residencyService" />
		<property name="inMigrationService" ref="inMigrationService" />
		<property name="outMigrationService" ref="outMigrationService" />
		<property name="pregnancyService" ref="pregnancyService" />
		<property name="deathService" ref="deathService" />
    	<property name="webFlowService" ref="webFlowService" />
    </bean>
    
    <bean id="modifyHOHBean" class="org.openhds.web.beans.ModifyHOHBean" scope="session">
        <property name="socialGroupService" ref="socialGroupService" />
        <property name="membershipService" ref="membershipService" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="entityService" ref="entityService" />
        <property name="genericDao" ref="genericDao" />
    </bean>
    
    <bean id="deathHOHBean" class="org.openhds.web.beans.DeathHOHBean" scope="session">
        <property name="socialGroupService" ref="socialGroupService" />
        <property name="deathService" ref="deathService" />
        <property name="membershipService" ref="membershipService" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="entityService" ref="entityService" />
        <property name="genericDao" ref="genericDao" />
    </bean>
    
    <bean id="validationRoutineBean" class="org.openhds.web.beans.ValidationRoutineBean">
		<property name="individualService" ref="individualService" />	
		<property name="locationService" ref="locationHierarchyService" />
		<property name="socialgroupService" ref="socialGroupService" />
		<property name="relationshipService" ref="relationshipService" />
		<property name="membershipService" ref="membershipService" />
		<property name="pregnancyService" ref="pregnancyService" />
		<property name="visitService" ref="visitService" />
		<property name="deathService" ref="deathService" />
		<property name="inmigrationService" ref="inMigrationService" />
		<property name="outmigrationService" ref="outMigrationService" />
		<property name="residencyService" ref="residencyService" />
		<property name="genericDao" ref="genericDao" />
		<property name="entityValidator" ref="entityValidator" />	
		<property name="properties" ref="siteProperties" />
		<property name="indivGenerator" ref="individualIdGenerator" />
		<property name="locGenerator" ref="locationIdGenerator" />
		<property name="sgGenerator" ref="socialGroupIdGenerator" />
		<property name="visitGenerator" ref="visitIdGenerator" />
	</bean>
		        	
	<bean id="locationLevelConfig" class="org.openhds.web.beans.LocationLevelConfigBean">
		<property name="jsfService" ref="jsfService" />
		<property name="level1"><value>${locationHierarchyLevel1}</value></property>
		<property name="level2"><value>${locationHierarchyLevel2}</value></property>
		<property name="level3"><value>${locationHierarchyLevel3}</value></property>
		<property name="level4"><value>${locationHierarchyLevel4}</value></property>
		<property name="level5"><value>${locationHierarchyLevel5}</value></property>
		<property name="level6"><value>${locationHierarchyLevel6}</value></property>
		<property name="level7"><value>${locationHierarchyLevel7}</value></property>
		<property name="level8"><value>${locationHierarchyLevel8}</value></property>
		<property name="level9"><value>${locationHierarchyLevel9}</value></property>
	</bean>
		 
	 <bean id="sitePropertiesConfigBean" class="org.openhds.web.beans.SitePropertiesConfigBean">
	 	<property name="jsfService" ref="jsfService" />
	 	<property name="unknownIdentifier"><value>${unknownIdentifier}</value></property>
	 	<property name="inmigration"><value>${inmigration}</value></property>	 		 	
	 	<property name="outmigration"><value>${outmigration}</value></property>
	 	<property name="birth"><value>${birth}</value></property>
	 	<property name="death"><value>${death}</value></property>
	 	<property name="enumeration"><value>${enumeration}</value></property>
	 	<property name="marriage"><value>${marriage}</value></property>
	 	<property name="notApplicable"><value>${notApplicable}</value></property>
	 	<property name="liveBirth"><value>${liveBirth}</value></property>
	 	<property name="stillBirth"><value>${stillBirth}</value></property>
	 	<property name="miscarriage"><value>${miscarriage}</value></property>
	 	<property name="abortion"><value>${abortion}</value></property>
	 	<property name="male"><value>${male}</value></property>
	 	<property name="female"><value>${female}</value></property>
	 	<property name="dataStatusWarning"><value>${dataStatusWarning}</value></property>
	 	<property name="dataStatusValid"><value>${dataStatusValid}</value></property>
	 	<property name="dataStatusFatal"><value>${dataStatusFatal}</value></property>
	 	<property name="dataStatusVoid"><value>${dataStatusVoid}</value></property>
	 	<property name="dataStatusPending"><value>${dataStatusPending}</value></property>
	 	<property name="dataStatusClosed"><value>${dataStatusClosed}</value></property> 
	 	<property name="yesResponse"><value>${yesResponse}</value></property>
	 	<property name="noResponse"><value>${noResponse}</value></property>	
	 	<property name="dateFormat"><value>${dateFormat}</value></property>
	 	<property name="autocomplete"><value>${autocomplete}</value></property>
	 	<property name="minAgeOfParenthood"><value>${minAgeOfParenthood}</value></property>
        <property name="minAgeOfHouseholdHead"><value>${minAgeOfHouseholdHead}</value></property>
        <property name="minAgeOfMarriage"><value>${minAgeOfMarriage}</value></property>
        <property name="minAgeOfPregnancy"><value>${minAgeOfPregnancy}</value></property>
        <property name="earliestEnumerationDate"><value>${earliestEnumerationDate}</value></property>
	 </bean>
	 
     <bean id="siteProperties" class="org.openhds.domain.service.impl.SitePropertiesServiceImpl">   
    	<property name="locale"><value>${openhds.locale}</value></property>     
        <property name="dateFormat"><value>${dateFormat}</value></property>
        <property name="autocomplete"><value>${autocomplete}</value></property>
        <property name="unknownIdentifier"><value>${unknownIdentifier}</value></property>
        <property name="inmigrationCode"><value>${inmigration}</value></property>
        <property name="outmigrationCode"><value>${outmigration}</value></property>
        <property name="birthCode"><value>${birth}</value></property>
        <property name="deathCode"><value>${death}</value></property>
        <property name="enumerationCode"><value>${enumeration}</value></property>
        <property name="marriageCode"><value>${marriage}</value></property>
        <property name="notApplicableCode"><value>${notApplicable}</value></property>
        <property name="liveBirthCode"><value>${liveBirth}</value></property>
        <property name="stillBirthCode"><value>${stillBirth}</value></property>
        <property name="miscarriageCode"><value>${miscarriage}</value></property>
        <property name="abortionCode"><value>${abortion}</value></property>
        <property name="maleCode"><value>${male}</value></property>
        <property name="femaleCode"><value>${female}</value></property>
        <property name="dataStatusWarningCode"><value>${dataStatusWarning}</value></property>
        <property name="dataStatusValidCode"><value>${dataStatusValid}</value></property>
        <property name="dataStatusFatalCode"><value>${dataStatusFatal</value></property>
        <property name="dataStatusVoidCode"><value>${dataStatusVoid}</value></property>
        <property name="dataStatusPendingCode"><value>${dataStatusPending}</value></property>
        <property name="dataStatusClosedCode"><value>${dataStatusClosed}</value></property>
        <property name="minimumAgeOfParents"><value>${minAgeOfParenthood}</value></property>
        <property name="minimumAgeOfHouseholdHead"><value>${minAgeOfHouseholdHead}</value></property>
        <property name="minimumAgeOfMarriage"><value>${minAgeOfMarriage}</value></property>
        <property name="minimumAgeOfPregnancy"><value>${minAgeOfPregnancy}</value></property>
        <property name="yesResponse"><value>${yesResponse}</value></property>
        <property name="noResponse"><value>${noResponse}</value></property>
		<property name="earliestEnumerationDate"><value>${earliestEnumerationDate}</value></property>
        <property name="specialStudyLocation"><value>${openhds.specialStudyLocation}</value></property>
     </bean> 
							        
     <bean id="appContextAware" class="org.openhds.domain.constraint.AppContextAware" /> 
     <bean id="valueConstraintService" class="org.openhds.domain.service.impl.ValueConstraintServiceImpl" />
    
	 <bean id="calendarUtil" class="org.openhds.domain.util.CalendarUtil">
		 <property name="siteProperties" ref="siteProperties" />
	 </bean>
	                 	 
	 <!-- transaction configuration delegates responsibility for transaction management -->
     <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
     	<property name="sessionFactory" ref="sessionFactory" />
     </bean>
         
     <!-- Introduction Advisor that looks for a DynamicFinder annotation on methods -->
	 <!-- Refer to http://www.ibm.com/developerworks/java/library/j-genericdao.htm -->
     <bean id="dynamicFinderAdvisor" class="org.openhds.dao.finder.Advisor" /> 
         	 	 
	 <!-- dao configuration -->

	<!-- All entity DAOs should inhert from this bean -->
    <bean id="baseDao" class="org.openhds.dao.service.impl.BaseDaoImpl" abstract="true">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="namingStrategy">
            <bean class="org.openhds.dao.finder.AnnotationNamingStrategy" />
        </property>
        <property name="argumentTypeFactory">
            <bean class="org.openhds.dao.finder.SimpleArgumentTypeFactory" />
        </property>
     </bean>
	 
	 <bean id="genericDao" class="org.openhds.dao.service.impl.GenericDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
     </bean>
     
    <!-- A proxy that contains an introduction advisor -->
	<!-- Any bean that uses the DynamicFinder annotation should use this bean as its parent -->
    <bean id="dynamicDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
                <value>dynamicFinderAdvisor</value>
            </list>
        </property>
    </bean>

	<!-- The UserDao interface makes use of the DynamicFinder annotation so must inherit from dynamicDao bean -->
    <bean id="userDao" parent="dynamicDao">
        <property name="proxyInterfaces" value="org.openhds.dao.service.UserDao" />
        <property name="target">
            <bean parent="baseDao">
                <constructor-arg value="org.openhds.domain.model.User" />
            </bean>
        </property>
    </bean>
    
    <bean id="openhdsUserDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.User" />
    </bean>
        
    <bean id="deathDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Death" />
    </bean>
    
     <bean id="demRatesDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.DemRates" />
    </bean>
 
    <bean id="extensionDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.ClassExtension" />
    </bean>

    <bean id="fieldWorkerDao" parent="baseDao" class="org.openhds.dao.service.impl.FieldWorkerDaoImpl">
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <property name="properties" ref="siteProperties" />
    </bean>

    <bean id="individualDao" parent="baseDao" class="org.openhds.dao.service.impl.IndividualDaoImpl">
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <property name="properties" ref="siteProperties" />
    </bean>

    <bean id="inMigrationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.InMigration" />
    </bean>

    <bean id="locationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Location" />
    </bean>

    <bean id="locationHierarchyDao" parent="baseDao" class="org.openhds.dao.service.impl.LocationHierarchyDaoImpl">
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
    </bean>
    
    <bean id="locationHierarchyLevelDao" parent="baseDao" >
        <constructor-arg value="org.openhds.domain.model.LocationHierarchyLevel" />
    </bean>

    <bean id="membershipDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Membership" />
    </bean>
    
    <bean id="outMigrationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.OutMigration" />
    </bean>

    <bean id="pregnancyDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.PregnancyOutcome" />
    </bean>

    <bean id="pregnancyObservationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.PregnancyObservation" />
    </bean>

    <bean id="relationshipDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Relationship" />
    </bean>

    <bean id="residencyDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Residency" />
    </bean>

    <bean id="roleDao" parent="baseDao" class="org.openhds.dao.service.impl.RoleDaoImpl">
        <constructor-arg value="org.openhds.domain.model.Role" />
    </bean>

    <bean id="roundDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Round" />
    </bean>

    <bean id="socialGroupDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.SocialGroup" />
    </bean>
        
    <bean id="visitDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Visit" />
    </bean>
    
    <bean id="whitelistDao" parent="baseDao" >
    	<constructor-arg value="org.openhds.domain.model.Whitelist" />
    </bean>
    
    <bean id="noteDao" parent="baseDao" >
    	<constructor-arg value="org.openhds.domain.model.Note" />
    </bean>
    
    <context:property-placeholder location="classpath*:site-config.properties" />
    
     <!-- Used by the baseTransactionBean to determine when to insert the Transactional Advice -->
     <!-- In this case it will be when the Transactional annotation is found -->
     <bean id="txAttrSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        
     <!-- Base Transaction Bean Declaration -->
     <!-- Any bean that uses the Transactional annotation should set its parent to this bean to receive the proper proxy  -->
    <!-- The <tx:annotation-driven /> element, or AdvisorAutoProxyCreator are not used because multiple proxies were generated -->
    <!-- when using BeforeAdvice with a Transactional class. In other words, the Proxy created for the BeforeAdvice would contain -->
    <!-- another Proxy bean (Transactional Proxy) as its target. If transaction beans declare this as their parent, only 1 proxy -->
    <!-- is created, the Transactional proxy, which can contain a list of interceptors (pre and post), -->
    <!-- which is where BeforeAdvice, etc can be placed. The target of the Transactional proxy is the bean itself, not another proxy -->
    <!-- Did not see any other way of avoiding multiple proxies from being created -->
	<bean id="baseTransactionBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
    	<property name="transactionManager" ref="transactionManager" />
    	<property name="transactionAttributeSource" ref="txAttrSource" />
	</bean>

	<!-- Request scoped bean to serve as a cache for the current logged in user -->
    <bean id="userCache" class="org.openhds.controller.util.UserCache" />
     
	<!-- Simple bean to get current logged in user -->
    <bean id="currentUser" class="org.openhds.controller.service.impl.CurrentUserImpl" >
        <property name="userDao" ref="userDao" />
    </bean>
    
    <!-- Authorization Advice to determine if logged in User has privilege to access method within service -->
	<bean id="authorizationAdvice" class="org.openhds.controller.aop.AuthorizationAdvice">
		<property name="currentUser" ref="currentUser" />
	</bean>
	    
    <!-- security configuration -->
    <bean id="userDetailsService" parent="baseTransactionBean">
    	<property name="target">
    		<bean class="org.openhds.controller.security.UserDetailsService">
        		<property name="userDao" ref="userDao" />
    		</bean>
   		</property>
	</bean>
	
	<security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService" />
    </security:authentication-manager>
	
	<!-- allows for the @secured annotation -->
    <security:global-method-security secured-annotations="enabled" />
        
    <!-- Base service bean that includes authorization advice -->
	<bean id="baseServiceBean" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
            	<value>authorizationAdvice</value>
            </list>
        </property>
	</bean>
	
	<!-- This should be used as the parent for any service bean that has a Transactional annotation -->
   	<bean id="baseServiceTransactionBean" parent="baseTransactionBean" abstract="true">
        <property name="preInterceptors">
            <list>
            	<ref bean="authorizationAdvice" />
            </list>
    	</property>
	</bean>
	
	<bean id="baselineService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.BaselineServiceImpl">
		        <constructor-arg ref="membershipService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
	
	<bean id="deathService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.DeathServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="individualService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="demRatesService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.DemRatesServiceImpl">
		        <constructor-arg ref="genericDao" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="extensionService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.ExtensionServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    		
	<bean id="fieldWorkerService" parent="baseServiceBean">
	 	<property name="target">
	 		<bean class="org.openhds.controller.service.impl.FieldWorkerServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="fieldWorkerIdGenerator" />
		    </bean>
		</property>
    </bean>
    
    <bean id="individualMergeService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.IndividualMergeServiceImpl">
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="membershipService" />
		        <constructor-arg ref="inMigrationService" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="individualService" parent="baseServiceTransactionBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.IndividualServiceImpl">
				<constructor-arg ref="genericDao" />
				<constructor-arg ref="individualIdGenerator" />
				<constructor-arg ref="siteProperties" />
				<constructor-arg ref="entityService" />
				<constructor-arg ref="idSchemeResource" />
    		</bean>
   		</property>
    </bean>
        
    <bean id="inMigrationService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.InMigrationServiceImpl">
		        <constructor-arg ref="residencyService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="individualService" />
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="locationHierarchyService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.LocationHierarchyServiceImpl">		    
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
		        <constructor-arg ref="locationIdGenerator" />
		        <constructor-arg ref="locationHierarchyIdGenerator" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="membershipService" parent="baseServiceBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.MembershipServiceImpl">
				<constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="siteProperties" />
    		</bean>
   		</property>
	</bean>
    
    <bean id="outMigrationService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.OutMigrationServiceImpl">
		    	<constructor-arg ref="residencyService" />
		    	<constructor-arg ref="individualService" />
		        <constructor-arg ref="genericDao" />
				<constructor-arg ref="siteProperties" />
				<constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>  
    
    <bean id="pregnancyService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.PregnancyServiceImpl">
		        <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="genericDao" />
    			<constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="relationshipService" parent="baseServiceBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.RelationshipServiceImpl">
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />   
    			<constructor-arg ref="siteProperties" /> 		
    		</bean>
   		</property>
	</bean>
  	
    <bean id="residencyService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.ResidencyServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="roleService" parent="baseServiceTransactionBean">
	    <property name="target">
		    <bean class="org.openhds.controller.service.impl.RoleServiceImpl">
		    	<constructor-arg ref="roleDao" />
		    	<constructor-arg ref="genericDao" />
		    	<constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="roundService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.RoundServiceImpl">
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="socialGroupService" parent="baseServiceTransactionBean">
   		<property name="target">
		    <bean class="org.openhds.controller.service.impl.SocialGroupServiceImpl">
		        <constructor-arg ref="genericDao" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="entityService"/>
    			<constructor-arg ref="socialGroupIdGenerator" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="visitService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.VisitServiceImpl">
		        <constructor-arg ref="entityService" />
                <constructor-arg ref="genericDao" />
		        <constructor-arg ref="visitIdGenerator" />
                <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="whitelistService" class="org.openhds.controller.service.impl.WhitelistServiceImpl">
    	<constructor-arg ref="genericDao" />
    </bean>
             
    <bean id="idSchemeResource" class="org.openhds.controller.idgeneration.IdSchemeResource">
 		<property name="idScheme">
      		<list>
      			<ref bean="fieldWorkerIdScheme" />
      			<ref bean="individualIdScheme" />
      			<ref bean="locationIdScheme" />
      			<ref bean="locationHierarchyIdScheme" />
      			<ref bean="socialGroupIdScheme" />
      			<ref bean="visitIdScheme" />
      		</list>
      </property>
	</bean>
    
	<bean id="idGenerator" class="org.openhds.controller.idgeneration.Generator" abstract="true">
    	<property name="resource" ref="idSchemeResource" />
    	<property name="genericDao" ref="genericDao" />
    </bean>
    
   <bean id="luhnValidator" class="org.openhds.controller.idgeneration.LuhnValidator" />
	
	<bean id="idValidator" class="org.openhds.controller.idgeneration.IdValidator">
		<constructor-arg ref="luhnValidator" />
		<constructor-arg ref="siteProperties" />
		<constructor-arg ref="idSchemeResource" />
	</bean>
	    
    <bean id="locationIdGenerator" class="org.openhds.controller.idgeneration.LocationGenerator" parent="idGenerator">
    	<property name="generated"><value>${openhds.locationIdUseGenerator}</value></property>
    </bean>
    
    <bean id="locationHierarchyIdGenerator" class="org.openhds.controller.idgeneration.LocationHierarchyGenerator" parent="idGenerator"/>
   
    <bean id="individualIdGenerator" class="org.openhds.controller.idgeneration.IndividualGenerator" parent="idGenerator" >
    	<property name="generated"><value>${openhds.individualIdUseGenerator}</value></property>
    </bean>
    
    <bean id="socialGroupIdGenerator" class="org.openhds.controller.idgeneration.SocialGroupGenerator" parent="idGenerator">
		<property name="generated"><value>${openhds.sgIdUseGenerator}</value></property>
    </bean>
    
    <bean id="visitIdGenerator" class="org.openhds.controller.idgeneration.VisitGenerator" parent="idGenerator">
    	<property name="generated"><value>${openhds.visitIdUseGenerator}</value></property>
    </bean>
    
    <bean id="fieldWorkerIdGenerator" class="org.openhds.controller.idgeneration.FieldWorkerGenerator" parent="idGenerator" >
    	<property name="generated"><value>${openhds.fwIdUseGenerator}</value></property>
    </bean>
    
	<!-- Supported fields are LOCATION_NAME, LOCATION_HIERARCHY_ID -->
    <bean id="locationIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Location" />
    	<property name="prefix"><value>${openhds.locationPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.locationCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.locationIncrementBound}</value></property>
    	<property name="length"><value>${openhds.locationIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="LOCATION_NAME"><value>${openhds.locationNameLength}</value></entry>
    			<entry key="LOCATION_HIERARCHY_ID"><value>${openhds.locationHierarchyIdLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are CHILD_LOC_NAME -->
    <!-- If CHILD_LOC_NAME is used, CHILD_LOC_NAME_FIRST and CHILD_LOC_NAME_LAST must be as well -->
    <bean id="locationHierarchyIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="LocationHierarchy" />
    	<property name="prefix"><value>${openhds.locationHPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.locationHCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.locationHIncrementBound}</value></property>
    	<property name="length"><value>${openhds.locationHIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="CHILD_LOC_NAME"><value>${openhds.locationHChildLocNameLength}</value></entry>
    			<entry key="CHILD_LOC_NAME_FIRST"><value>${openhds.locationHChildLocFirstNameLength}</value></entry>
    			<entry key="CHILD_LOC_NAME_LAST"><value>${openhds.locationHChildLocLastNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
       
    <!-- Supported fields are INDIVIDUAL_FNAME, INDIVIDUAL_MNAME, INDIVIDUAL_LNAME -->
    <bean id="individualIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Individual" />
    	<property name="prefix"><value>${openhds.individualPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.individualCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.individualIncrementBound}</value></property>
    	<property name="length"><value>${openhds.individualIdLength}</value></property>
    	<property name="fields">
    		<map>
				<entry key="INDIVIDUAL_FNAME"><value>${openhds.individualFirstNameLength}</value></entry>
				<entry key="INDIVIDUAL_MNAME"><value>${openhds.individualMiddleNameLength}</value></entry>
				<entry key="INDIVIDUAL_LNAME"><value>${openhds.individualLastNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
     <!-- Supported fields are SOCIALGROUP_NAME -->
    <bean id="socialGroupIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="SocialGroup" />
    	<property name="prefix"><value>${openhds.sgPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.sgCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.sgIncrementBound}</value></property>
    	<property name="length"><value>${openhds.sgIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="SOCIALGROUP_NAME"><value>${openhds.sgNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are VISIT_LOCID, VISIT_ROUND -->
    <bean id="visitIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Visit" />
    	<property name="prefix"><value>${openhds.visitPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.visitCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.visitIncrementBound}</value></property>
    	<property name="length"><value>${openhds.visitIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="VISIT_LOCID"><value>${openhds.visitLocationIdLength}</value></entry>
    			<entry key="VISIT_ROUND"><value>${openhds.visitRound}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are FIELDWORKER_FNAME, FIELDWORKER_LNAME -->
    <bean id="fieldWorkerIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="FieldWorker" />
    	<property name="prefix"><value>${openhds.fwPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.fwCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.fwIncrementBound}</value></property>
    	<property name="length"><value>${openhds.fwIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="FIELDWORKER_FNAME"><value>${openhds.fwFirstNameLength}</value></entry>
    			<entry key="FIELDWORKER_LNAME"><value>${openhds.fwLastNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
	 
</beans>
